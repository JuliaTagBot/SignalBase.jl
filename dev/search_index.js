var documenterSearchIndex = {"docs":
[{"location":"#SignalBase.jl-1","page":"Reference","title":"SignalBase.jl","text":"","category":"section"},{"location":"#Signal-Inspection-API-1","page":"Reference","title":"Signal Inspection API","text":"","category":"section"},{"location":"#","page":"Reference","title":"Reference","text":"sampletype\nnchannels\nframerate\nnframes\nduration","category":"page"},{"location":"#SignalBase.sampletype","page":"Reference","title":"SignalBase.sampletype","text":"sampletype(x)\n\nReturns the element type of an individual channel of a signal (e.g. Float64).\n\nnote: Note\nThe result of sampletype and eltype (when defined) are often the same. They are distinct so that these two can diverge when appropriate.\n\n\n\n\n\n","category":"function"},{"location":"#SignalBase.nchannels","page":"Reference","title":"SignalBase.nchannels","text":"nchannels(x)\n\nReturns the number of channels in the signal.\n\n\n\n\n\n","category":"function"},{"location":"#SignalBase.framerate","page":"Reference","title":"SignalBase.framerate","text":"framerate(x)\n\nReturns the frame rate of the signal (in Hertz). May return missing if the frame rate is unknown.\n\n\n\n\n\n","category":"function"},{"location":"#SignalBase.nframes","page":"Reference","title":"SignalBase.nframes","text":"nframes(x)\n\nReturns the number of frames in the signal, if known. May return missing  (e.g. for a file stream).\n\n\n\n\n\n","category":"function"},{"location":"#SignalBase.duration","page":"Reference","title":"SignalBase.duration","text":"duration(x)\n\nReturn the duration of the signal in seconds, if known. May return missing or inflen. The value missing always denotes a finite but unknown length.\n\nnote: Note\nA fallback implementation of duration uses nframes(x) / framerate(x). However, if one or both of these is missing and you want duartion to return a non-missing value, you can define a custom method of duration.\n\n\n\n\n\n","category":"function"},{"location":"#Unit-Utility-Functions-1","page":"Reference","title":"Unit Utility Functions","text":"","category":"section"},{"location":"#","page":"Reference","title":"Reference","text":"inframes\ninradians\ninseconds\ninHz","category":"page"},{"location":"#SignalBase.inframes","page":"Reference","title":"SignalBase.inframes","text":"inframes([Type,]quantity[, rate])\n\nTranslate the given quantity to a (unitless) number of time frames, given a particular framerate. Note that this isn't quantized to integer numbers of frames. If given a Type, the result will first be coerced to the given type.\n\nIf the given quantity is Unitful, we use the given units. If it is not we assume it is already a value in frames.\n\nFor some units (e.g. frames) you will need to specify a frame rate. If not specified the rate is missing.\n\nExample\n\njulia> inframes(0.5s, 44100Hz)\n22050.0\n\njulia> inframes(Int,10.5frames)\n10\n\n\n\n\n\n","category":"function"},{"location":"#SignalBase.inradians","page":"Reference","title":"SignalBase.inradians","text":"inradians([Type],x)\n\nGiven an angle value, convert to a value of Type (defaults to Float64) in radians. Unitless numbers are assumed to be in radians and are silently passed through.\n\nExamples\n\njulia> inradians(180°)\n3.141592653589793\n\njulia> inradians(2π)\n6.283185307179586\n\njulia> inradians(0.5π*rad)\n1.5707963267948966\n\n\n\n\n\n","category":"function"},{"location":"#SignalBase.inseconds","page":"Reference","title":"SignalBase.inseconds","text":"inseconds(quantity[, rate])\n\nTranslate a particular quantity (usually a time) to a (unitless) value in seconds.\n\nIf the given quantity is Unitful, we use the given units. If it is not we assume it is already a value in seconds.\n\nFor some units (e.g. frames) you will need to specify a frame rate. If not specified the rate is missing.\n\nExamples\n\njulia> inseconds(50.0ms)\n0.05\n\njulia> inseconds(441frames, 44100Hz)\n0.01\n\n\n\n\n\n","category":"function"},{"location":"#SignalBase.inHz","page":"Reference","title":"SignalBase.inHz","text":"inHz(quantity)\n\nTranslate a particular quantity (usually a frequency) to a (unitless) value in Hz.\n\nIf the given quantity is Unitful, we use the given units. If it is not we assume it is already a value in Hz.\n\nExamples\n\njulia> inHz(1.0kHz)\n1000.0\n\n\n\n\n\n","category":"function"}]
}
